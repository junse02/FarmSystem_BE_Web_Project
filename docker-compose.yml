version: "3.8"

services:
  postgres-db:
    image: postgres:15-alpine
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: board_db
      POSTGRES_USER: board_user
      POSTGRES_PASSWORD: board_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U board_user -d board_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s # 시작 후 30초 동안은 상태 검사 실패를 무시

  redis-db:
    image: redis:7-alpine
    container_name: redis_db
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  board-api:
    image: reha0124/farmsystem-be:latest
    container_name: board_api
    restart: always
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/board_db
      SPRING_DATASOURCE_USERNAME: board_user
      SPRING_DATASOURCE_PASSWORD: board_pass
      SPRING_DATA_REDIS_HOST: redis-db
      SPRING_DATA_REDIS_PORT: 6379
      JWT_SECRET: "change-me-in-dev" # 따옴표로 감싸서 명확하게 설정
    depends_on:
      postgres-db:
        condition: service_healthy # 컨테이너가 Healthy 상태일 때만 시작
      redis-db:
        condition: service_healthy # 컨테이너가 Healthy 상태일 때만 시작

volumes:
  postgres-data:
  redis-data:
